{"version":3,"file":"togglecategories.min.js","sources":["../src/togglecategories.js"],"sourcesContent":["/**\n * Controller for expanding/collapsing grade report categories (compatible with gradereport_user).\n * Fixes the visual state of the toggle icon and preserves the expanded/collapsed state\n * using localStorage for each user and course.\n *\n * @module report_lifestory/togglecategories\n */\nexport const init = () => {\n    const params = new URLSearchParams(window.location.search);\n    const userid = params.get('userid') || '0';\n    const courseid = params.get('id') || 'all';\n    const STORAGE_KEY = `history_student_ai_state_${userid}_${courseid}`;\n\n    let state = {};\n    try {\n        state = JSON.parse(localStorage.getItem(STORAGE_KEY)) || {};\n    } catch {\n        state = {};\n    }\n\n    document.querySelectorAll(\".toggle-category\").forEach(button => {\n        const icons = button.querySelectorAll(\".icon, .fa, i\");\n        if (icons.length > 1) {\n            for (let i = 0; i < icons.length - 1; i++) {\n                icons[i].remove();\n            }\n        }\n\n        const categoryId = button.dataset.categoryid;\n        const dataTarget = button.dataset.target;\n        let categoryRows = dataTarget ? document.querySelectorAll(dataTarget) : [];\n\n        if ((!dataTarget || categoryRows.length === 0) && categoryId) {\n            categoryRows = document.querySelectorAll(\"tr.cat_\" + categoryId);\n        }\n\n        // Apply the saved expanded/collapsed state.\n        const savedExpanded = state[categoryId];\n        const icon = button.querySelector(\".icon, .fa, i\");\n\n        if (savedExpanded === false) {\n            categoryRows.forEach(r => (r.style.display = \"none\"));\n            button.setAttribute(\"aria-expanded\", \"false\");\n            rotateIcon(icon, false);\n        } else if (savedExpanded === true) {\n            categoryRows.forEach(r => (r.style.display = \"\"));\n            button.setAttribute(\"aria-expanded\", \"true\");\n            rotateIcon(icon, true);\n        } else {\n            // Default behavior: sync the state with current visibility.\n            const visible = categoryRows.length > 0 && categoryRows[0].style.display !== \"none\";\n            button.setAttribute(\"aria-expanded\", visible ? \"true\" : \"false\");\n            rotateIcon(icon, visible);\n        }\n\n        // Click handler: toggle visibility and persist the new state.\n        button.addEventListener(\"click\", e => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            const isExpanded = button.getAttribute(\"aria-expanded\") === \"true\";\n            const newExpanded = !isExpanded;\n\n            categoryRows.forEach(r => (r.style.display = newExpanded ? \"\" : \"none\"));\n            button.setAttribute(\"aria-expanded\", newExpanded ? \"true\" : \"false\");\n            state[categoryId] = newExpanded;\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n            rotateIcon(icon, newExpanded);\n        });\n    });\n};\n\n/**\n * Rotates the category toggle icon according to its expansion state.\n *\n * @param {HTMLElement|null} icon - The icon element inside the toggle button.\n * @param {boolean} expanded - Whether the category is expanded or collapsed.\n */\nfunction rotateIcon(icon, expanded) {\n    if (!icon) {\n        return;\n    }\n    icon.style.transition = \"transform 0.2s ease\";\n    icon.style.transform = expanded ? \"rotate(90deg)\" : \"rotate(0deg)\";\n}\n"],"names":["rotateIcon","icon","expanded","style","transition","transform","params","URLSearchParams","window","location","search","userid","get","courseid","STORAGE_KEY","state","JSON","parse","localStorage","getItem","document","querySelectorAll","forEach","button","icons","length","i","remove","categoryId","dataset","categoryid","dataTarget","target","categoryRows","savedExpanded","querySelector","r","display","setAttribute","visible","addEventListener","e","preventDefault","stopPropagation","newExpanded","getAttribute","setItem","stringify"],"mappings":"iKA8ESA,WAAWC,KAAMC,UACjBD,OAGLA,KAAKE,MAAMC,WAAa,sBACxBH,KAAKE,MAAME,UAAYH,SAAW,gBAAkB,8BA5EpC,WACVI,OAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,OAASL,OAAOM,IAAI,WAAa,IACjCC,SAAWP,OAAOM,IAAI,OAAS,MAC/BE,+CAA0CH,mBAAUE,cAEtDE,MAAQ,OAERA,MAAQC,KAAKC,MAAMC,aAAaC,QAAQL,eAAiB,GAC3D,MACEC,MAAQ,GAGZK,SAASC,iBAAiB,oBAAoBC,SAAQC,eAC5CC,MAAQD,OAAOF,iBAAiB,oBAClCG,MAAMC,OAAS,MACV,IAAIC,EAAI,EAAGA,EAAIF,MAAMC,OAAS,EAAGC,IAClCF,MAAME,GAAGC,eAIXC,WAAaL,OAAOM,QAAQC,WAC5BC,WAAaR,OAAOM,QAAQG,WAC9BC,aAAeF,WAAaX,SAASC,iBAAiBU,YAAc,GAElEA,YAAsC,IAAxBE,aAAaR,SAAiBG,aAC9CK,aAAeb,SAASC,iBAAiB,UAAYO,mBAInDM,cAAgBnB,MAAMa,YACtB3B,KAAOsB,OAAOY,cAAc,qBAEZ,IAAlBD,cACAD,aAAaX,SAAQc,GAAMA,EAAEjC,MAAMkC,QAAU,SAC7Cd,OAAOe,aAAa,gBAAiB,SACrCtC,WAAWC,MAAM,QACd,IAAsB,IAAlBiC,cACPD,aAAaX,SAAQc,GAAMA,EAAEjC,MAAMkC,QAAU,KAC7Cd,OAAOe,aAAa,gBAAiB,QACrCtC,WAAWC,MAAM,OACd,OAEGsC,QAAUN,aAAaR,OAAS,GAAuC,SAAlCQ,aAAa,GAAG9B,MAAMkC,QACjEd,OAAOe,aAAa,gBAAiBC,QAAU,OAAS,SACxDvC,WAAWC,KAAMsC,SAIrBhB,OAAOiB,iBAAiB,SAASC,IAC7BA,EAAEC,iBACFD,EAAEE,wBAGIC,cADsD,SAAzCrB,OAAOsB,aAAa,kBAGvCZ,aAAaX,SAAQc,GAAMA,EAAEjC,MAAMkC,QAAUO,YAAc,GAAK,SAChErB,OAAOe,aAAa,gBAAiBM,YAAc,OAAS,SAC5D7B,MAAMa,YAAcgB,YACpB1B,aAAa4B,QAAQhC,YAAaE,KAAK+B,UAAUhC,QACjDf,WAAWC,KAAM2C"}